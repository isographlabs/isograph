{
  "name": "isograph",
  "displayName": "Isograph",
  "version": "0.0.4",
  "description": "Isograph-powered IDE experience",
  "repository": {
    "type": "git",
    "url": "https://github.com/isographlabs/isograph",
    "directory": "vscode-extension"
  },
  "license": "MIT",
  "publisher": "isograph",
  "main": "./out/extension.js",
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:javascriptreact",
    "onLanguage:typescript",
    "onLanguage:typescriptreact"
  ],
  "extensionDependencies": [
    "GraphQL.vscode-graphql-syntax"
  ],
  "contributes": {
    "commands": [],
    "configuration": {
      "type": "object",
      "title": "Isograph",
      "properties": {
        "isograph.pathToIsograph": {
          "scope": "workspace",
          "default": null,
          "type": [
            "string",
            "null"
          ],
          "description": "Absolute path to the isograph binary. If not provided, the extension will look in the nearest node_modules directory"
        },
        "isograph.pathToConfig": {
          "scope": "workspace",
          "default": null,
          "type": [
            "string",
            "null"
          ],
          "description": "Path to a isograph config relative to the `rootDirectory`. Without this, the compiler will search for your config. This is helpful if your isograph project is in a nested directory."
        },
        "isograph.rootDirectory": {
          "scope": "workspace",
          "default": null,
          "type": [
            "string",
            "null"
          ],
          "description": "A path relative to the root of your VSCode project for the extension to work from. The default value is the root of your project. This will change where we start looking for the isograph-compiler node module. This will also affect where the LSP server is started, therefore affecting how the isograph config is found. This is helpful if your project is in a nested directory."
        }
      }
    },
    "jsonValidation": []
  },
  "scripts": {
    "typecheck": "tsc",
    "prettier-check": "prettier -c .",
    "prettier-write": "prettier --write .",
    "lint": "eslint --max-warnings 0 .",
    "vscode:prepublish": "rm -f tsconfig.tsbuildinfo && rm -rf out && pnpm run esbuild-base -- --minify",
    "build-local": "vsce package",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "pnpm run esbuild-base --sourcemap",
    "esbuild-watch": "pnpm run esbuild-base --sourcemap --watch"
  },
  "engines": {
    "node": "22.9.0",
    "vscode": "^1.60.0"
  },
  "packageManager": "npm@10.8.3",
  "dependencies": {
    "semver": "^7.3.7",
    "vscode-languageclient": "^9.0.1"
  },
  "devDependencies": {
    "@types/node": "^17.0.23",
    "@types/semver": "^7.3.9",
    "@types/vscode": "^1.60.0",
    "@typescript-eslint/eslint-plugin": "^5.13.0",
    "@typescript-eslint/parser": "^5.0.0",
    "@vscode/vsce": "^2.18.0",
    "esbuild": "^0.17.12",
    "eslint": "^8.19.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-plugin-import": "^2.26.0",
    "prettier": "^2.6.2",
    "typescript": "^4.6.3"
  }
}
